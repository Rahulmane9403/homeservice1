// <auto-generated />
using System;
using HomeServiceApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeServiceApp.Migrations
{
    [DbContext(typeof(HomeServiceDBContext))]
    [Migration("20250204135250_AddPasswordSaltToUser")]
    partial class AddPasswordSaltToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeServiceApp.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JobDetails")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("job_details");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("worker_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkerId");

                    b.ToTable("bookings", "homeservice");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(2, 1)")
                        .HasColumnName("rating");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("review");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("feedbacks", "homeservice");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("payments", "homeservice");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Support", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<string>("IssueDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("issue_description");

                    b.Property<string>("Resolution")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("resolution");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("worker_id");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkerId");

                    b.ToTable("supports", "homeservice");
                });

            modelBuilder.Entity("HomeServiceApp.Models.SystemAdministration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("action_description");

                    b.Property<DateTime>("ActionTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("action_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("action_type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("worker_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkerId");

                    b.ToTable("system_administration", "homeservice");
                });

            modelBuilder.Entity("HomeServiceApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Preferences")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("preferences");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "UC_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UC_Phone")
                        .IsUnique();

                    b.ToTable("users", "homeservice");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("availability");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("experience");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gender");

                    b.Property<byte[]>("IdentityProof")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("identity_proof");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("languages");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("photo");

                    b.Property<decimal>("Ratings")
                        .HasColumnType("decimal(2, 1)")
                        .HasColumnName("ratings");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("skills");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Mobile" }, "UC_Mobile")
                        .IsUnique();

                    b.ToTable("workers", "homeservice");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Booking", b =>
                {
                    b.HasOne("HomeServiceApp.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__bookings__user_i__5070F446");

                    b.HasOne("HomeServiceApp.Models.Worker", "Worker")
                        .WithMany("Bookings")
                        .HasForeignKey("WorkerId")
                        .IsRequired()
                        .HasConstraintName("FK__bookings__worker__5165187F");

                    b.Navigation("User");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Feedback", b =>
                {
                    b.HasOne("HomeServiceApp.Models.Booking", "Booking")
                        .WithMany("Feedbacks")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__feedbacks__booki__5629CD9C");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Payment", b =>
                {
                    b.HasOne("HomeServiceApp.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__payments__bookin__59063A47");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Support", b =>
                {
                    b.HasOne("HomeServiceApp.Models.Booking", "Booking")
                        .WithMany("Supports")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__supports__bookin__5DCAEF64");

                    b.HasOne("HomeServiceApp.Models.User", "User")
                        .WithMany("Supports")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__supports__user_i__5BE2A6F2");

                    b.HasOne("HomeServiceApp.Models.Worker", "Worker")
                        .WithMany("Supports")
                        .HasForeignKey("WorkerId")
                        .IsRequired()
                        .HasConstraintName("FK__supports__worker__5CD6CB2B");

                    b.Navigation("Booking");

                    b.Navigation("User");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("HomeServiceApp.Models.SystemAdministration", b =>
                {
                    b.HasOne("HomeServiceApp.Models.User", "User")
                        .WithMany("SystemAdministrations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__system_ad__user___619B8048");

                    b.HasOne("HomeServiceApp.Models.Worker", "Worker")
                        .WithMany("SystemAdministrations")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("FK__system_ad__worke__628FA481");

                    b.Navigation("User");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Booking", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Payments");

                    b.Navigation("Supports");
                });

            modelBuilder.Entity("HomeServiceApp.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Supports");

                    b.Navigation("SystemAdministrations");
                });

            modelBuilder.Entity("HomeServiceApp.Models.Worker", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Supports");

                    b.Navigation("SystemAdministrations");
                });
#pragma warning restore 612, 618
        }
    }
}
